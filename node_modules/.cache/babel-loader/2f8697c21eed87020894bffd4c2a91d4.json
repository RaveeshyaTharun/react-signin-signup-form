{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final Project\\\\FrontEnd-BackEnd\\\\Front-End\\\\src\\\\components\\\\UserDiabeticHistory\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Box, Button } from '@mui/material';\nimport { Print as PrintIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PredictionHistory() {\n  _s();\n\n  const [history, setHistory] = useState([]);\n  const printRefs = useRef({});\n  useEffect(() => {\n    fetchHistory();\n  }, []);\n\n  const fetchHistory = () => {\n    axios.get('http://localhost:5000/history').then(response => {\n      setHistory(response.data);\n    }).catch(error => {\n      console.error('Error fetching history:', error);\n    });\n  }; // Define the order of feature names matching the backend data order\n\n\n  const fieldNames = ['Pregnancies', 'Glucose Level', 'Blood Pressure', 'Skin Thickness', 'Insulin Level', 'Body Mass Index (BMI)', 'Diabetes Pedigree Function', 'Age']; // Print function for individual entries\n\n  const handlePrint = index => {\n    const printContent = printRefs.current[index];\n    const printWindow = window.open('', '', 'width=800,height=600');\n    printWindow.document.write('<html><head><title>Print</title></head><body>');\n    printWindow.document.write(printContent.innerHTML);\n    printWindow.document.write('</body></html>');\n    printWindow.document.close();\n    printWindow.print();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"Prediction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Index\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Features\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Print\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: history.map((entry, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  ref: el => printRefs.current[index] = el,\n                  children: entry.features.map((value, idx) => /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [fieldNames[idx], \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 27\n                    }, this), \" \", value]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: entry.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(entry.date).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 34\n                  }, this),\n                  onClick: () => handlePrint(index),\n                  children: \"Print\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PredictionHistory, \"nnrOxKfCUyz04DKMAVpoaeG55KY=\");\n\n_c = PredictionHistory;\nexport default PredictionHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"PredictionHistory\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Container","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Box","Button","Print","PrintIcon","PredictionHistory","history","setHistory","printRefs","fetchHistory","get","then","response","data","catch","error","console","fieldNames","handlePrint","index","printContent","current","printWindow","window","open","document","write","innerHTML","close","print","padding","marginTop","fontWeight","map","entry","el","features","value","idx","result","Date","date","toLocaleString"],"sources":["D:/Final Project/FrontEnd-BackEnd/Front-End/src/components/UserDiabeticHistory/index.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Box, Button } from '@mui/material';\r\nimport { Print as PrintIcon } from '@mui/icons-material';\r\n\r\nfunction PredictionHistory() {\r\n  const [history, setHistory] = useState([]);\r\n  const printRefs = useRef({});\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  }, []);\r\n\r\n  const fetchHistory = () => {\r\n    axios.get('http://localhost:5000/history')\r\n      .then(response => {\r\n        setHistory(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching history:', error);\r\n      });\r\n  };\r\n\r\n  // Define the order of feature names matching the backend data order\r\n  const fieldNames = [\r\n    'Pregnancies',\r\n    'Glucose Level',\r\n    'Blood Pressure',\r\n    'Skin Thickness',\r\n    'Insulin Level',\r\n    'Body Mass Index (BMI)',\r\n    'Diabetes Pedigree Function',\r\n    'Age'\r\n  ];\r\n\r\n  // Print function for individual entries\r\n  const handlePrint = (index) => {\r\n    const printContent = printRefs.current[index];\r\n    const printWindow = window.open('', '', 'width=800,height=600');\r\n    printWindow.document.write('<html><head><title>Print</title></head><body>');\r\n    printWindow.document.write(printContent.innerHTML);\r\n    printWindow.document.write('</body></html>');\r\n    printWindow.document.close();\r\n    printWindow.print();\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Paper elevation={3} style={{ padding: '20px', marginTop: '20px' }}>\r\n        <Typography variant=\"h5\" align=\"center\" gutterBottom style={{ fontWeight: 'bold' }}>\r\n          Prediction History\r\n        </Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Index</TableCell>\r\n                <TableCell>Features</TableCell>\r\n                <TableCell>Result</TableCell>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Print</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {history.map((entry, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Box ref={(el) => (printRefs.current[index] = el)}>\r\n                      {entry.features.map((value, idx) => (\r\n                        <Typography key={idx} variant=\"body2\">\r\n                          <strong>{fieldNames[idx]}:</strong> {value}\r\n                        </Typography>\r\n                      ))}\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>{entry.result}</TableCell>\r\n                  <TableCell>{new Date(entry.date).toLocaleString()}</TableCell>\r\n                  <TableCell>\r\n                    <Button \r\n                      variant=\"outlined\" \r\n                      color=\"primary\" \r\n                      startIcon={<PrintIcon />} \r\n                      onClick={() => handlePrint(index)}\r\n                    >\r\n                      Print\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PredictionHistory;"],"mappings":"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"},"metadata":{},"sourceType":"module"}