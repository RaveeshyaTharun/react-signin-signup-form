{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final Project\\\\Tharun\\\\FrontEnd-BackEnd\\\\Front-End\\\\src\\\\components\\\\RunModel\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './Predictor.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserAccount = () => {\n  _s();\n\n  const [input, setInput] = useState({\n    pregnancies: 5,\n    glucose: 166,\n    bloodPressure: 72,\n    skinThickness: 19,\n    insulin: 175,\n    bmi: 25.8,\n    diabetesPedigreeFunction: 0.587,\n    age: 51\n  });\n  const [prediction, setPrediction] = useState(null);\n  const [clicked, setClicked] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput(prevInput => ({ ...prevInput,\n      [name]: parseFloat(value) || 0\n    }));\n  };\n\n  const handlePredict = async () => {\n    try {\n      console.log(\"Sending request with input:\", input);\n      const response = await axios.post('http://localhost:5000/predict', {\n        input: Object.values(input)\n      });\n      console.log(\"Received response:\", response);\n      setPrediction(response.data.prediction);\n    } catch (error) {\n      console.error('Error making prediction:', error);\n    }\n  };\n\n  const handleClick = () => {\n    setClicked(!clicked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Diabetes Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form,\n        children: [Object.keys(input).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: [key.replace(/([A-Z])/g, ' $1').toUpperCase(), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: key === 'bmi' || key === 'diabetesPedigreeFunction' ? '0.1' : '1',\n              name: key,\n              value: input[key],\n              onChange: handleChange,\n              className: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePredict,\n          className: styles.button,\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), prediction !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.result,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prediction Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), prediction === 0 ? 'The person is not diabetic' : 'The person is diabetic']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserAccount, \"hLY21j/AnZX507czQ+/Iu5liwmo=\");\n\n_c = UserAccount;\nexport default UserAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAccount\");","map":{"version":3,"names":["React","useState","axios","styles","UserAccount","input","setInput","pregnancies","glucose","bloodPressure","skinThickness","insulin","bmi","diabetesPedigreeFunction","age","prediction","setPrediction","clicked","setClicked","handleChange","e","name","value","target","prevInput","parseFloat","handlePredict","console","log","response","post","Object","values","data","error","handleClick","container","title","form","keys","map","key","formGroup","label","replace","toUpperCase","button","result"],"sources":["E:/Final Project/Tharun/FrontEnd-BackEnd/Front-End/src/components/RunModel/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './Predictor.module.css';\r\n\r\nconst UserAccount = () => {\r\n    const [input, setInput] = useState({\r\n        pregnancies: 5,\r\n        glucose: 166,\r\n        bloodPressure: 72,\r\n        skinThickness: 19,\r\n        insulin: 175,\r\n        bmi: 25.8,\r\n        diabetesPedigreeFunction: 0.587,\r\n        age: 51\r\n    });\r\n    const [prediction, setPrediction] = useState(null);\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setInput(prevInput => ({\r\n            ...prevInput,\r\n            [name]: parseFloat(value) || 0\r\n        }));\r\n    };\r\n\r\n    const handlePredict = async () => {\r\n        try {\r\n            console.log(\"Sending request with input:\", input);\r\n            const response = await axios.post('http://localhost:5000/predict', {\r\n                input: Object.values(input)\r\n            });\r\n            console.log(\"Received response:\", response);\r\n            setPrediction(response.data.prediction);\r\n        } catch (error) {\r\n            console.error('Error making prediction:', error);\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        setClicked(!clicked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <nav>\r\n            {/* Your navigation code */}\r\n        </nav>\r\n        <div className={styles.container}>\r\n            <h1 className={styles.title}>Diabetes Prediction</h1>\r\n            <div className={styles.form}>\r\n                {Object.keys(input).map(key => (\r\n                    <div className={styles.formGroup} key={key}>\r\n                        <label className={styles.label}>\r\n                            {key.replace(/([A-Z])/g, ' $1').toUpperCase()}:\r\n                            <input\r\n                                type=\"number\"\r\n                                step={key === 'bmi' || key === 'diabetesPedigreeFunction' ? '0.1' : '1'}\r\n                                name={key}\r\n                                value={input[key]}\r\n                                onChange={handleChange}\r\n                                className={styles.input}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n                <button onClick={handlePredict} className={styles.button}>Predict</button>\r\n            </div>\r\n            {prediction !== null && (\r\n                <div className={styles.result}>\r\n                    <h2>Prediction Result:</h2>\r\n                    {prediction === 0 ? 'The person is not diabetic' : 'The person is diabetic'}\r\n                </div>\r\n            )}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserAccount;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;IAC/BM,WAAW,EAAE,CADkB;IAE/BC,OAAO,EAAE,GAFsB;IAG/BC,aAAa,EAAE,EAHgB;IAI/BC,aAAa,EAAE,EAJgB;IAK/BC,OAAO,EAAE,GALsB;IAM/BC,GAAG,EAAE,IAN0B;IAO/BC,wBAAwB,EAAE,KAPK;IAQ/BC,GAAG,EAAE;EAR0B,CAAD,CAAlC;EAUA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,IAAD,CAA5C;EACA,MAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;;EAEA,MAAMkB,YAAY,GAAIC,CAAD,IAAO;IACxB,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,CAAC,CAACG,MAA1B;IACAjB,QAAQ,CAACkB,SAAS,KAAK,EACnB,GAAGA,SADgB;MAEnB,CAACH,IAAD,GAAQI,UAAU,CAACH,KAAD,CAAV,IAAqB;IAFV,CAAL,CAAV,CAAR;EAIH,CAND;;EAQA,MAAMI,aAAa,GAAG,YAAY;IAC9B,IAAI;MACAC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CvB,KAA3C;MACA,MAAMwB,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAW,+BAAX,EAA4C;QAC/DzB,KAAK,EAAE0B,MAAM,CAACC,MAAP,CAAc3B,KAAd;MADwD,CAA5C,CAAvB;MAGAsB,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,QAAlC;MACAb,aAAa,CAACa,QAAQ,CAACI,IAAT,CAAclB,UAAf,CAAb;IACH,CAPD,CAOE,OAAOmB,KAAP,EAAc;MACZP,OAAO,CAACO,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;IACH;EACJ,CAXD;;EAaA,MAAMC,WAAW,GAAG,MAAM;IACtBjB,UAAU,CAAC,CAACD,OAAF,CAAV;EACH,CAFD;;EAIA,oBACI;IAAA,wBACA;MAAA;MAAA;MAAA;IAAA,QADA,eAIA;MAAK,SAAS,EAAEd,MAAM,CAACiC,SAAvB;MAAA,wBACI;QAAI,SAAS,EAAEjC,MAAM,CAACkC,KAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAElC,MAAM,CAACmC,IAAvB;QAAA,WACKP,MAAM,CAACQ,IAAP,CAAYlC,KAAZ,EAAmBmC,GAAnB,CAAuBC,GAAG,iBACvB;UAAK,SAAS,EAAEtC,MAAM,CAACuC,SAAvB;UAAA,uBACI;YAAO,SAAS,EAAEvC,MAAM,CAACwC,KAAzB;YAAA,WACKF,GAAG,CAACG,OAAJ,CAAY,UAAZ,EAAwB,KAAxB,EAA+BC,WAA/B,EADL,oBAEI;cACI,IAAI,EAAC,QADT;cAEI,IAAI,EAAEJ,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,0BAAzB,GAAsD,KAAtD,GAA8D,GAFxE;cAGI,IAAI,EAAEA,GAHV;cAII,KAAK,EAAEpC,KAAK,CAACoC,GAAD,CAJhB;cAKI,QAAQ,EAAEtB,YALd;cAMI,SAAS,EAAEhB,MAAM,CAACE;YANtB;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ,GAAuCoC,GAAvC;UAAA;UAAA;UAAA;QAAA,QADH,CADL,eAgBI;UAAQ,OAAO,EAAEf,aAAjB;UAAgC,SAAS,EAAEvB,MAAM,CAAC2C,MAAlD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAhBJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,EAoBK/B,UAAU,KAAK,IAAf,iBACG;QAAK,SAAS,EAAEZ,MAAM,CAAC4C,MAAvB;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKhC,UAAU,KAAK,CAAf,GAAmB,4BAAnB,GAAkD,wBAFvD;MAAA;QAAA;QAAA;QAAA;MAAA,QArBR;IAAA;MAAA;MAAA;MAAA;IAAA,QAJA;EAAA,gBADJ;AAkCH,CAzED;;GAAMX,W;;KAAAA,W;AA2EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}